<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

       <!-- 引入资源文件 -->
       <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

       <!-- 引入redis配置文件 -->
       <import resource="classpath:spring-redis.xml"></import>

       <!-- 扫描组件 除了controller不扫描  -->
        <context:component-scan base-package="com.ssm">
            <context:exclude-filter type="annotation"
                                    expression="org.springframework.stereotype.Controller" />
        </context:component-scan>

       <!-- 配置数据源 -->
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
           <property name="driverClassName" value="${db.driver}"></property>
           <property name="url" value="${db.url}"></property>
           <property name="password" value="${db.password}"></property>
           <property name="username" value="${db.userName}"></property>

           <!-- 配置监控统计拦截的filters -->
           <property name="filters" value="stat" />

           <!-- 配置初始化大小、最小、最大 -->
           <property name="maxActive" value="20" />
           <property name="initialSize" value="1" />
           <property name="minIdle" value="1" />

           <!-- 配置获取连接等待超时的时间 -->
           <property name="maxWait" value="60000" />

           <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
           <property name="timeBetweenEvictionRunsMillis" value="60000" />

           <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
           <property name="minEvictableIdleTimeMillis" value="300000" />

           <property name="testWhileIdle" value="true" />
           <property name="testOnBorrow" value="false" />
           <property name="testOnReturn" value="false" />

           <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
           <property name="poolPreparedStatements" value="true" />
           <property name="maxOpenPreparedStatements" value="20" />
       </bean>

    <!--配置事务管理器 -->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 开始基于注解的事务 -->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"></tx:annotation-driven>
    <!--
        整合mybatis
     -->
    <!-- 创建sqlSessionFactory对象 里面的信息 就是mybatis-config.xml 在全局配置文件中配置的-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--mybatis全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- mapper文件的地址 -->
        <property name="mapperLocations" value="classpath:com/ssm/**/*.xml"></property>
    </bean>

    <!--配置一个可以进行批量执行的sqlSession  -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>

    <!--
        扫描所有的mapper接口的实现，让这些mapper能自动注入
    -->
    <mybatis-spring:scan base-package="com.ssm"></mybatis-spring:scan>

</beans>